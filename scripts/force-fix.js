// Script para for√ßar corre√ß√£o das permiss√µes
// Execute no console do navegador

console.log('üîß === FOR√áANDO CORRE√á√ÉO DE PERMISS√ïES ===')

// Fun√ß√£o para verificar e corrigir permiss√µes
function forceFixPermissions() {
  console.log('üîç Verificando estado atual...')
  
  // Verificar permiss√µes atuais
  const currentPermissions = JSON.parse(localStorage.getItem('user_permissions') || '[]')
  console.log('üìä Permiss√µes atuais:', currentPermissions.length)
  console.log('üéØ Tem dashboard:visualizar?', currentPermissions.includes('dashboard:visualizar'))
  
  // Lista completa de permiss√µes necess√°rias
  const requiredPermissions = [
    'dashboard:visualizar',
    'usuarios:visualizar',
    'usuarios:criar',
    'usuarios:editar',
    'usuarios:deletar',
    'usuarios:gerenciar',
    'gruas:visualizar',
    'gruas:criar',
    'gruas:editar',
    'gruas:deletar',
    'gruas:gerenciar',
    'estoque:visualizar',
    'estoque:criar',
    'estoque:editar',
    'estoque:deletar',
    'estoque:gerenciar',
    'relatorios:visualizar',
    'relatorios:exportar',
    'configuracoes:visualizar',
    'configuracoes:editar',
    'ponto_eletronico:visualizar',
    'ponto_eletronico:registrar',
    'assinatura_digital:visualizar',
    'assinatura_digital:assinar'
  ]
  
  console.log('üîß Adicionando todas as permiss√µes necess√°rias...')
  
  // Adicionar permiss√µes que n√£o existem
  let addedCount = 0
  requiredPermissions.forEach(perm => {
    if (!currentPermissions.includes(perm)) {
      currentPermissions.push(perm)
      addedCount++
      console.log(`  + ${perm}`)
    }
  })
  
  if (addedCount > 0) {
    console.log(`‚úÖ ${addedCount} permiss√µes adicionadas!`)
  } else {
    console.log('‚úÖ Todas as permiss√µes j√° existem!')
  }
  
  // Salvar permiss√µes atualizadas
  localStorage.setItem('user_permissions', JSON.stringify(currentPermissions))
  
  // Verificar resultado
  const finalPermissions = JSON.parse(localStorage.getItem('user_permissions') || '[]')
  const hasDashboard = finalPermissions.includes('dashboard:visualizar')
  
  console.log('üéØ Resultado final:')
  console.log(`  Total de permiss√µes: ${finalPermissions.length}`)
  console.log(`  Tem dashboard:visualizar? ${hasDashboard}`)
  
  return hasDashboard
}

// Fun√ß√£o para for√ßar recarregamento
function forceReload() {
  console.log('üîÑ For√ßando recarregamento...')
  window.location.reload()
}

// Executar corre√ß√£o
const fixed = forceFixPermissions()

if (fixed) {
  console.log('üéâ Corre√ß√£o aplicada com sucesso!')
  console.log('‚è≥ Recarregando p√°gina em 2 segundos...')
  setTimeout(forceReload, 2000)
} else {
  console.log('‚ùå Falha na corre√ß√£o')
}

// Exportar fun√ß√µes
window.forceFixPermissions = forceFixPermissions
window.forceReload = forceReload

console.log('üìù Fun√ß√µes dispon√≠veis:')
console.log('- forceFixPermissions() - For√ßar corre√ß√£o')
console.log('- forceReload() - Recarregar p√°gina')

