import cron from 'node-cron';
import { enviarLembretesAprovacao } from '../utils/notificacoes.js';

/**
 * Job para verifica√ß√£o di√°ria de aprova√ß√µes pendentes
 * Executa todo dia √†s 9h da manh√£
 */
const jobVerificacaoAprovacoes = cron.schedule('0 9 * * *', async () => {
  try {
    console.log('üïò Iniciando verifica√ß√£o di√°ria de aprova√ß√µes pendentes...');
    console.log(`üìÖ Data/Hora: ${new Date().toLocaleString('pt-BR')}`);
    
    await enviarLembretesAprovacao();
    
    console.log('‚úÖ Verifica√ß√£o di√°ria de aprova√ß√µes conclu√≠da com sucesso');
  } catch (error) {
    console.error('‚ùå Erro na verifica√ß√£o di√°ria de aprova√ß√µes:', error);
  }
}, {
  scheduled: false, // N√£o iniciar automaticamente
  timezone: 'America/Sao_Paulo'
});

/**
 * Inicia o job de verifica√ß√£o di√°ria
 */
export function iniciarJobVerificacaoAprovacoes() {
  try {
    jobVerificacaoAprovacoes.start();
    console.log('üöÄ Job de verifica√ß√£o di√°ria de aprova√ß√µes iniciado');
    console.log('‚è∞ Agendado para executar todo dia √†s 9h da manh√£');
  } catch (error) {
    console.error('‚ùå Erro ao iniciar job de verifica√ß√£o:', error);
  }
}

/**
 * Para o job de verifica√ß√£o di√°ria
 */
export function pararJobVerificacaoAprovacoes() {
  try {
    jobVerificacaoAprovacoes.stop();
    console.log('‚èπÔ∏è Job de verifica√ß√£o di√°ria de aprova√ß√µes parado');
  } catch (error) {
    console.error('‚ùå Erro ao parar job de verifica√ß√£o:', error);
  }
}

/**
 * Executa o job manualmente (para testes)
 */
export async function executarVerificacaoManual() {
  try {
    console.log('üîß Executando verifica√ß√£o manual de aprova√ß√µes...');
    await enviarLembretesAprovacao();
    console.log('‚úÖ Verifica√ß√£o manual conclu√≠da');
  } catch (error) {
    console.error('‚ùå Erro na verifica√ß√£o manual:', error);
    throw error;
  }
}

// Exportar o job para uso externo
export { jobVerificacaoAprovacoes };
